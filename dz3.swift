/*   1.	Есть словарь с видами чая и их стоимостью. Есть очередь людей, которые хотят заказать 
 чай (можно представить ее в виде массива видов чая, которые хотят заказать). 
 Необходимо последовательно выводить в консоль сколько заплатит покупатель 
 ( необходимо вывести его номер по порядку, чай, который он заказал и стоимость) */

 var teeAndCost: [String: Int] = ["black": 10, "green": 20, "grey": 100, "rose": 50]
 var costumers: [String] = ["green", "black", "rose", "grey", "grey"]
 for (index, element) in costumers.enumerated() {
    var b: Int? = teeAndCost[element]
        print(element + " " + String(index) + " " + String(b!))
 }

/* 2.	Есть массив [-4, 5, 10, nil, 4, nil, 25, 0, nil, 16, 75, -20, -7, 15, 0, nil]. 
Необходимо создать новый массив, который будет состоять из элементов старого, но не должно быть nil, 
не должно быть 0 и 4, а также массив должен быть отсортирован по возрастанию */

var arr = [-4, 5, 10, nil, 4, nil, 25, 0, nil, 16, 75, -20, -7, 15, 0, nil]
print(arr.compactMap { $0 }.sorted {$0 < $1}.filter {$0 != 4 && $0 != 0})

 /*3.	Написать функцию, которая на вход принимает целое число, а возвращает массив, 
который сформирован по следующим правилам: количество элементов соответствует переданному числу, 
массив начинается с 1, каждый последующий элемент больше предыдущего в 2 раза.
 */

 func funn(num: Int) -> [Int] {
    guard num > 1 else{
        return [1]
    }
    
    var arr: [Int] = [1]
    var res: Int = 4
    for i in 1...num-1 {
        if i == 1 || i == 2 {
            arr.append(2 * i)
        }else{
            res = res * 2
            arr.append(res)
        }
    }
    return arr
 }
 
 print(funn(num: 30))